/* Move down content because we have a fixed navbar that is 50px tall */
body {
    /*padding-top: 70px;*/
    padding-bottom: 20px;
}

/* Wrapping element */
/* Set some basic padding to keep content from hitting the edges */
.body-content {
    padding-left: 15px;
    padding-right: 15px;
}

/* Override the default bootstrap behavior where horizontal description lists 
   will truncate terms that are too long to fit in the left column 
*/
/*.dl-horizontal dt {
    white-space: normal;
}*/

/* Set widths on the form inputs since otherwise they're 100% wide */
/*input[type="text"],
input[type="password"],
input[type="email"],
input[type="tel"],
input[type="select"] {
    max-width: 280px;
}*/

/* Responsive: Portrait tablets and up */
@media screen and (min-width: 768px) {
    .body-content {
        padding: 0;
    }
}
/*@media (min-width: 1200px) {
    .container {
        width: 1170px;
    }
}

@media (min-width: 1500px) {
    .container {
        width: 1465px;
    }
}

@media (min-width: 1800px) {
    .container {
        width: 1760px;
    }
}*/
/*Bootstrap 3 has built-in visual support for disabled menu items, however these are simply visual changes and don't actually impact the interactivity of the element itself.
Once this is added to the styles, disable any dropdown item by applying a [disabled] attribute to the <a/> element itself, and adding the usual .disabled class to the parent <li>.
More information here: http://blog.craigsworks.com/bootstrap-3-disabled-dropdown-links/  */
.nav > li.disabled {/*Mimic cursor style from native .nav > li.disabled > a{} styles, since `pointer-events: none` kills the cursor state, too. */
    cursor: not-allowed; 
}
.nav > li.disabled > a {
    pointer-events: none;
}
